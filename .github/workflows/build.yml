name: Build and publish TRS-80 artifacts

on: [push]

env:
  REGISTRY: ghcr.io
  #IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME: lkesteloot/trs80-ide

jobs:
  build-all-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: npm clean-install
      - run: npm run build --workspaces
      - run: npm run test -w packages/z80-asm
      - run: npm run test -w packages/z80-disasm
      - run: npm run test -w packages/z80-emulator
      - uses: actions/upload-artifact@v4
        with:
          name: my-trs-80
          path: packages/my-trs-80/build/
      - uses: actions/upload-artifact@v4
        with:
          name: trs80-cassette-webapp
          path: packages/trs80-cassette-webapp/build/
      - uses: actions/upload-artifact@v4
        with:
          name: trs80-ide
          path: packages/trs80-ide/dist/
      - run: npm run buildBinaries -w packages/trs80-tool
      - uses: actions/upload-artifact@v4
        with:
          name: trs80-tool-linux
          path: packages/trs80-tool/binaries/trs80-tool/linux/trs80-tool
      - uses: actions/upload-artifact@v4
        with:
          name: trs80-tool-macos
          path: packages/trs80-tool/binaries/trs80-tool/macos/trs80-tool
      - uses: actions/upload-artifact@v4
        with:
          name: trs80-tool-windows
          path: packages/trs80-tool/binaries/trs80-tool/windows/trs80-tool.exe
      - uses: actions/upload-artifact@v4
        with:
          name: trs80-tool-site
          path: packages/trs80-tool/site/
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: packages/trs80-ide
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
